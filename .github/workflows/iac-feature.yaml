name: Terraform CI

on:
  push:
    branches:
      - iac-feature
    paths:
      - "infrastructure/**"

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: iac-feature
        persist-credentials: true


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: |
        cd infrastructure/production
        terraform init -backend=true -input=false

    - name: Terraform Format Check
      id: fmt
      run: |
        cd infrastructure
        terraform fmt --recursive
        terraform fmt -check
      continue-on-error: true

    - name: Commit and Push Formatting Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add infrastructure/
        git diff --quiet && git diff --staged --quiet || git commit -m "Auto-format: Terraform files updated"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:iac-feature
        # git push origin iac-feature
      continue-on-error: true  

    - name: Terraform Validate
      id: validate
      run: |
        cd infrastructure/production
        terraform validate -no-color
      continue-on-error: true  

    - name: Terraform Plan
      id: plan
      run: |
        cd infrastructure/production
        terraform plan -no-color -input=false
      continue-on-error: true

    - name: Post Plan Results to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Init ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validate ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })


    # #############################################################################################################################

    # - name: Create Pull Request
    #   if: github.ref == 'refs/heads/iac-feature'
    #   uses: peter-evans/create-pull-request@v5
    #   with:
    #     token: ${{ secrets.GH_PAT }}
    #     commit-message: "Auto PR: Merge iac-feature to main"
    #     title: "üöÄ Auto PR: Merge iac-feature to main"
    #     body: |
    #       This is an automatically generated PR to merge infrastructure changes from `iac-feature` to `main`.
    #       - Terraform Plan has been executed and results are available in the PR comments.
    #     branch: iac-feature
    #     base: main
    #     create-branch: true     
    #     delete-branch: false

    # #############################################################################################################################

    # # - name: Create Pull Request
    # #   uses: peter-evans/create-pull-request@v5
    # #   with:
    # #     token: ${{ secrets.GH_PAT }}  
    # #     commit-message: "Auto PR: Merge iac-feature to main"
    # #     title: "üöÄ Auto PR: Merge iac-feature to main"
    # #     # body: |
    # #     #   This is an automatically generated PR to merge infrastructure changes.
    # #     #   - Terraform Plan Output: 
    # #     #   ```terraform
    # #     #   ${{ steps.validate.outputs.stdout }}
    # #     #   ```
    # #     body: |
    # #       This is an automatically generated PR to merge infrastructure changes from `iac-feature` to `main`.
    # #       - Terraform Plan has been executed and results are available in the PR comments.

    # #     base: iac-feature
    # #     branch: main
    # #     create-branch: false  
    # #     delete-branch: false

    # #############################################################################################################################
